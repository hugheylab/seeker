% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch.R
\name{fetch}
\alias{fetch}
\title{Fetch files}
\usage{
fetch(
  remoteFilepaths,
  outputDir = "fetch_output",
  overwrite = FALSE,
  wgetCmd = "wget",
  wgetArgs = "-q",
  asperaCmd = getAsperaCmd(),
  asperaArgs = getAsperaArgs(),
  asperaPrefix = "era-fasp"
)
}
\arguments{
\item{remoteFilepaths}{Character vector of remote filepaths. For single-end
reads, each element of the vector should be a single filepath. For
paired-end reads, each element should be two filepaths separated by ";". If
a remote filepath starts with "fasp", the file will be downloaded using
aspera ascp, otherwise the file will be downloaded using wget.}

\item{outputDir}{String indicating the local directory in which to save the
files. Will be created if it doesn't exist.}

\item{overwrite}{Logical indicating whether to overwrite files that already
exist in \code{outputDir}.}

\item{wgetCmd}{String indicating command for fetching files using wget.}

\item{wgetArgs}{Character vector indicating arguments to pass to wget.}

\item{asperaCmd}{String indicating path to the aspera ascp program.}

\item{asperaArgs}{Character vector indicating arguments to pass to ascp.}

\item{asperaPrefix}{String indicating prefix for downloading files by aspera,
i.e., \code{asperaPrefix@remoteFilepath}.}
}
\value{
A list. As the function runs, it updates a tab-delimited log file in
\code{outputDir} called "progress.tsv".
}
\description{
This function can download files using aspera (recommended) or wget, by
calling command-line interfaces using \code{\link[=system2]{system2()}}. To download files in
parallel, register a parallel backend using \code{\link[doFuture:registerDoFuture]{doFuture::registerDoFuture()}} or
\code{\link[doParallel:registerDoParallel]{doParallel::registerDoParallel()}}.
}
\seealso{
\code{\link[=getMetadata]{getMetadata()}}, \code{\link[=getAsperaCmd]{getAsperaCmd()}}, \code{\link[=getAsperaArgs]{getAsperaArgs()}}
}
